{"version":3,"sources":["components/styles.module.css","components/Searchbar.js","components/Button.js","components/ImageGallery.js","components/ImageGalleryItem.js","components/Modal.js","components/Loader.js","components/ApiService.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSerchQuery","className","styles","e","preventDefault","SearchForm","type","SearchFormButton","SearchFormBtnLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Button","onClick","this","props","React","Component","ImageGallery","children","ImageGalleryItem","src","alt","url","ImageGalleryItemImage","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","event","target","ModalContent","GalleryLoader","color","height","width","timeout","KEY","currentPage","a","fetch","res","ok","json","Promise","reject","Error","api","fetchImage","App","images","setImages","setCurrentPage","currentPageImages","setCurrentPageImages","setSearchQuery","isLoading","setIsLoading","error","setError","showModal","setShowModal","modalUrl","setModalUrl","modalAlt","setModalAlt","fetchImages","ImagesApi","then","hits","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","prevPage","toggleModal","onClickImageGalleryItem","getAttribute","renderLoadMoreButton","length","map","id","tags","webformatURL","largeImageURL","Loader","name","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6f362ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__1ywHL\",\"Searchbar\":\"styles_Searchbar__2tLBB\",\"SearchForm\":\"styles_SearchForm__3RSLz\",\"SearchFormButton\":\"styles_SearchFormButton__6xDdE\",\"SearchFormBtnLabel\":\"styles_SearchFormBtnLabel__2HVCg\",\"SearchFormInput\":\"styles_SearchFormInput__2iagZ\",\"SearchForm-input\":\"styles_SearchForm-input__1ejMv\",\"ImageGallery\":\"styles_ImageGallery__2c9A_\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__2KJDr\",\"ImageGalleryItemImage\":\"styles_ImageGalleryItemImage__2mG3s\",\"ImageGalleryItem-image\":\"styles_ImageGalleryItem-image__3G027\",\"Overlay\":\"styles_Overlay__3gw3R\",\"Modal\":\"styles_Modal__3CgKE\",\"Button\":\"styles_Button__2H87Q\",\"ModalContent\":\"styles_ModalContent___cVD6\"};","import React, { useState } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nconst  Searchbar=({onSubmit})=> {\r\n\r\n  const [searchQuery, setSerchQuery] = useState('')\r\n\r\n  const handleNameChange = (e) => {\r\n        setSerchQuery( e.currentTarget.value.toLowerCase());\r\n    };\r\n\r\n   const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n      onSubmit(searchQuery);\r\n        setSerchQuery( '' );\r\n    };\r\n\r\n        return (\r\n          <header className={styles.Searchbar} onSubmit={handleSubmit}>\r\n          <form className={styles.SearchForm}>\r\n            <button type=\"submit\" className={styles.SearchFormButton}>\r\n              <span className={styles.SearchFormBtnLabel}>Search</span>\r\n            </button>\r\n\r\n              <input\r\n                className={styles.SearchFormInput}\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"\r\n                value={searchQuery}\r\n               onChange={handleNameChange}\r\n              />\r\n          </form>\r\n            </header>\r\n      );\r\n    }\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.module.css';\r\n\r\nclass Button extends React.Component {\r\n    render() {\r\n    return (\r\n        <button type=\"button\" className={styles.Button} onClick={this.props.onClick}>\r\n            Load more\r\n        </button>\r\n    )}\r\n};\r\n\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default Button;","import React from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className={styles.ImageGallery}>{children}</ul>\r\n);\r\n\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.module.css';\r\n\r\nconst ImageGalleryItem = ({onClick, src, alt, url}) => (\r\n  \r\n  <li className={styles.ImageGalleryItem}>\r\n    <img\r\n      onClick={onClick}\r\n      src={src}\r\n      alt={alt}\r\n      className={styles.ImageGalleryItemImage}\r\n      url={url}\r\n    />\r\n  </li>\r\n);\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './styles.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n\r\nconst  Modal =({onClose, src, alt})=> {\r\n\r\n  useEffect(\r\n    () => { window.addEventListener('keydown', handleKeyDown);\r\n      return () => { window.removeEventListener('keydown', handleKeyDown) };\r\n  }\r\n    , []);\r\n\r\n\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n     onClose();\r\n      }\r\n    };\r\n      \r\n      const handleBackdropClick = event => {\r\n      if (event.currentTarget === event.target) {\r\n        onClose();\r\n      }\r\n      };\r\n\r\n        return createPortal (\r\n          <div className={styles.Overlay} onClick={handleBackdropClick}>\r\n            <div className={styles.ModalContent}>\r\n              <img src={src} alt={alt} />\r\n            </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n\r\n    export default Modal;\r\n","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst GalleryLoader = () => (\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  \r\nexport default GalleryLoader;\r\n","const KEY = '21945016-35782941565d1dfa523c4c56b';\r\nasync function fetchImage(searchQuery, currentPage) {\r\n  const res = await fetch(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return await Promise.reject(new Error('There is no data'));\r\n}\r\n\r\nconst api = { fetchImage };\r\n\r\nexport default api;","import React, { useEffect, useState } from 'react';\r\nimport Searchbar from './components/Searchbar';\r\nimport Button from './components/Button';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport ImageGalleryItem from './components/ImageGalleryItem';\r\nimport Modal from './components/Modal';\r\nimport Loader from './components/Loader'\r\nimport ImagesApi from './components/ApiService';\r\n\r\n\r\nconst App = () => {\r\n  const [images, setImages] = useState('');\r\n  const [currentPage, setCurrentPage] = useState('');\r\n  const [currentPageImages, setCurrentPageImages] = useState('');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n  const [modalUrl, setModalUrl] = useState('');\r\n  const [modalAlt, setModalAlt] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      fetchImages();\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  const fetchImages = () => {\r\n    setIsLoading(true);\r\n    ImagesApi\r\n      .fetchImage(searchQuery, currentPage)\r\n      .then((images) => {\r\n        if (currentPage === 1) {\r\n          setImages(images.hits)\r\n        } else {\r\n          setImages((prevState) => [...prevState, ...images.hits]);\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => setError(error))\r\n      .finally(() =>{\r\n        setIsLoading(false);\r\n        setCurrentPage((prevPage) => prevPage + 1);\r\n        setCurrentPageImages((prevState) => prevState + 12);\r\n      });\r\n  };  \r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal)\r\n  };\r\n\r\n  const handleFormSubmit = (searchQuery) => {\r\n    setSearchQuery(searchQuery);\r\n    setCurrentPage(1);\r\n    setImages([]);\r\n    setError(null);\r\n  };\r\n\r\n  const onClickImageGalleryItem = (e) => {\r\n    setModalUrl(e.currentTarget.getAttribute('url'));\r\n    setModalAlt(e.currentTarget.getAttribute('alt'));\r\n    toggleModal();\r\n  };\r\n    \r\n    const renderLoadMoreButton = !(currentPageImages.length < 12) && !isLoading;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={handleFormSubmit} />\r\n        {error && (\r\n          <p> something went wrong ... {error} </p>\r\n        )}\r\n        <ImageGallery>\r\n          { images && images.map(({ id, tags, webformatURL, largeImageURL }) => (\r\n            <ImageGalleryItem key={id} alt={tags} src={webformatURL} url={largeImageURL} onClick={onClickImageGalleryItem} />\r\n          ))}\r\n        </ImageGallery>\r\n        {isLoading && <Loader name={searchQuery}/>}\r\n        \r\n         { renderLoadMoreButton && \r\n          <Button onClick={fetchImages} />}\r\n        \r\n        {showModal &&\r\n          (<Modal onClose={toggleModal}\r\n            src={modalUrl} alt={modalAlt}>\r\n          <button type=\"button\" onClick={toggleModal}>\r\n            Close\r\n          </button>\r\n        </Modal>)}\r\n        </>\r\n  )\r\n          }\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}